/* using gp pari, i get the number of ways the total of n s-sided dices sum to "t"
  ? ssf(t,n,s) = {r=0; for(j=0, floor((t-n)/s), r+=(-1)^j*binomial(n,j)*binomial(t-s*j-1,n-1)); r}

  ? tt=0; for(t=6,36,print1(ssf(t,9,4)", "))
  0, 0, 0, 1, 9, 45, 165, 486, 1206, 2598, 4950, 8451, 13051, 18351, 23607, 27876, 30276, 30276, 27876, 23607, 18351, 13051, 8451, 4950, 2598, 1206, 486, 165, 45, 9, 1 

  ? tt=0; for(t=6,36,print1(ssf(t,6,6)", "))
  1, 6, 21, 56, 126, 252, 456, 756, 1161, 1666, 2247, 2856, 3431, 3906, 4221, 4332, 4221, 3906, 3431, 2856, 2247, 1666, 1161, 756, 456, 252, 126, 56, 21, 6, 1
*/

object P205 {
  val w49 = List[Long](0, 0, 0, 1, 9, 45, 165, 486, 1206, 2598, 4950, 8451, 13051, 18351, 23607, 27876, 30276, 30276, 27876, 23607, 18351, 13051, 8451, 4950, 2598, 1206, 486, 165, 45, 9, 1)

  val w66 = List[Long](1, 6, 21, 56, 126, 252, 456, 756, 1161, 1666, 2247, 2856, 3431, 3906, 4221, 4332, 4221, 3906, 3431, 2856, 2247, 1666, 1161, 756, 456, 252, 126, 56, 21, 6, 1)

  import scala.math._

  val allcases = pow(4,9) * pow(6,6)

 def main(args: Array[String]) {
   val poscases = (for(i <- 0 to 30; j<-0 to i-1) yield w49(i)*w66(j)).sum
   println(poscases/allcases)
 }
}

 
